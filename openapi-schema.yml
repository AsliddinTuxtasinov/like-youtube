openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /user/auth/logout/:
    get:
      operationId: listLogouts
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - user
    post:
      operationId: createLogout
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user
  /user/auth/user/:
    get:
      operationId: retrieveUserDetailsCustom
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsCustom'
          description: ''
      tags:
      - user
    put:
      operationId: updateUserDetailsCustom
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailsCustom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailsCustom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailsCustom'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsCustom'
          description: ''
      tags:
      - user
    patch:
      operationId: partialUpdateUserDetailsCustom
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailsCustom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailsCustom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailsCustom'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsCustom'
          description: ''
      tags:
      - user
  /user/channel/{id}/:
    get:
      operationId: retrieveCustomUserChannel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user
    patch:
      operationId: partialUpdateCustomUserChannel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user
    delete:
      operationId: destroyCustomUserChannel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - user
  /user/channel/create/:
    get:
      operationId: listCustomUserChannelCreates
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - user
    post:
      operationId: createCustomUserChannel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user
  /content/comment/detail/{comment_pk}/:
    get:
      operationId: retrieveComment
      description: ''
      parameters:
      - name: comment_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - content
    put:
      operationId: updateComment
      description: ''
      parameters:
      - name: comment_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - content
    patch:
      operationId: partialUpdateComment
      description: ''
      parameters:
      - name: comment_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - content
    delete:
      operationId: destroyComment
      description: ''
      parameters:
      - name: comment_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - content
  /content/:
    get:
      operationId: listVideoContents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoContent'
          description: ''
      tags:
      - content
    post:
      operationId: createVideoContent
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoContent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoContent'
          description: ''
      tags:
      - content
  /content/{id}/:
    get:
      operationId: retrieveVideoContent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this video content.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoContent'
          description: ''
      tags:
      - content
    put:
      operationId: updateVideoContent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this video content.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoContent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoContent'
          description: ''
      tags:
      - content
    patch:
      operationId: partialUpdateVideoContent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this video content.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoContent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoContent'
          description: ''
      tags:
      - content
    delete:
      operationId: destroyVideoContent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this video content.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - content
  /user/auth/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - user
  /user/auth/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - user
  /user/auth/login/:
    post:
      operationId: createLoginCustom
      description: 'Check the credentials and return the REST Token

        if the credentials are valid and authenticated.

        Calls Django Auth login method to register User ID

        in Django session framework


        Accept the following POST parameters: username, password

        Return the REST Framework Token Object''s key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCustom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginCustom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginCustom'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginCustom'
          description: ''
      tags:
      - user
  /user/auth/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - user
  /user/auth/password/reset/confirm/{uidb64}/{token}/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters:
      - name: uidb64
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: token
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - user
  /user/auth/registration/:
    post:
      operationId: createRegisterCustom
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCustom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterCustom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterCustom'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCustom'
          description: ''
      tags:
      - user
  /user/auth/registration/verify-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - user
  /user/auth/registration/resend-email/:
    post:
      operationId: createEmailAddress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
      tags:
      - user
  /user/follow/{channel_id}/:
    post:
      operationId: createFollowChannel
      description: ''
      parameters:
      - name: channel_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user
  /user/unfollow/{channel_id}/:
    post:
      operationId: createUnFollowChannel
      description: ''
      parameters:
      - name: channel_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - user
  /content/like/{video_content_id}/:
    post:
      operationId: createLikes
      description: ''
      parameters:
      - name: video_content_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - content
  /content/dislike/{video_content_id}/:
    post:
      operationId: createDislike
      description: ''
      parameters:
      - name: video_content_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - content
  /content/comment/{content_pk}/:
    post:
      operationId: createComment
      description: ''
      parameters:
      - name: content_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - content
components:
  schemas:
    UserDetailsCustom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        your_channel:
          type: string
          readOnly: true
        following_channels:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        parent:
          type: integer
          nullable: true
        video_content:
          type: string
          readOnly: true
        author:
          type: string
          readOnly: true
        reply_count:
          type: string
          readOnly: true
        replies:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date
          readOnly: true
      required:
      - text
    VideoContent:
      type: object
      properties:
        content_detail_url:
          type: string
          readOnly: true
        like_url:
          type: string
          readOnly: true
        dislike_url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        describe:
          type: string
          nullable: true
        file_video:
          type: string
          format: binary
        proxy_videos:
          type: string
          readOnly: true
        views_count:
          type: string
          readOnly: true
        likes_count:
          type: string
          readOnly: true
        dislikes_count:
          type: string
          readOnly: true
        owner_channel_id:
          type: string
          readOnly: true
        owner_channel:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            owner:
              type: string
              readOnly: true
            name:
              type: string
              nullable: true
              maxLength: 255
            describe:
              type: string
              nullable: true
            create_at:
              type: string
              format: date-time
              readOnly: true
            owner_id:
              type: string
              readOnly: true
            follow_channel_url:
              type: string
              readOnly: true
            unfollow_channel_url:
              type: string
              readOnly: true
          readOnly: true
        comments:
          type: string
          readOnly: true
        create_comment_url:
          type: string
          readOnly: true
      required:
      - title
      - file_video
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    LoginCustom:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    RegisterCustom:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 200
      required:
      - username
      - email
      - password1
      - password2
      - first_name
      - last_name
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
